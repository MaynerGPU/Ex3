package Ex3;

import java.util.Random;

class ThreadVetor extends Thread {
    private int numero;
    private int[] vetor;

    public ThreadVetor(int numero, int[] vetor) {
        this.numero = numero;
        this.vetor = vetor;
    }

    @Override
    public void run() {
        long tempoInicio = System.nanoTime(); // Marca o tempo inicial

        if (numero % 2 == 0) { // Caso número seja par
            for (int i = 0; i < vetor.length; i++) {
                int temp = vetor[i]; // Apenas acessando os elementos
            }
        } else { // Caso número seja ímpar
            for (int num : vetor) {
                int temp = num; // Apenas acessando os elementos
            }
        }

        long tempoFim = System.nanoTime(); // Marca o tempo final
        double tempoSegundos = ( tempoFim - tempoInicio) / 1_000_000_000.0; // Converte para segundos
        

        System.out.println("Thread " + numero + " - Tempo de execução: " + tempoSegundos + " segundos");
    }
}

public class Vetor {
    public static void main(String[] args) {
        Random random = new Random();
        int[] vetor = new int[1000];

        // Preenchendo o vetor com valores aleatórios de 1 a 100
        for (int i = 0; i < vetor.length; i++) {
            vetor[i] = random.nextInt(100) + 1;
        }

        // Criando e iniciando as threads
        ThreadVetor thread1 = new ThreadVetor(1, vetor);
        ThreadVetor thread2 = new ThreadVetor(2, vetor);

        thread1.start();
        thread2.start();
    }
}
